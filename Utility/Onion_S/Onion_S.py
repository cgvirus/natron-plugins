# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Onion_SExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Onion_SExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Onion_S"

def getLabel():
    return "Onion_S"

def getVersion():
    return 1

def getIconPath():
    return "Onion_S.png"

def getGrouping():
    return "Community/Utility"

def getPluginDescription():
    return "This is a simple Onion Skin utility node. It supports 5 fames of fixed interval onion skin in the forward and backward directions with user selectable colors, and two blending modes."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("Spacer01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("\n")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.Spacer01 = param
    del param

    param = lastNode.createIntParam("Frame_Interval_Control", "Frame Interval")
    param.setMinimum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Frame_Interval_Control = param
    del param

    param = lastNode.createChoiceParam("Skining_Method_Control", "Skining Method")
    entries = [ ("Alpha", ""),
    ("Color-Burn", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Color-Burn")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Skining_Method_Control = param
    del param

    param = lastNode.createSeparatorParam("Devider1", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Devider1 = param
    del param

    param = lastNode.createColorParam("ForwardColorConstantcolor", "Forward Color", True)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ForwardColorConstantcolor = param
    del param

    param = lastNode.createStringParam("Spacer02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.Spacer02 = param
    del param

    param = lastNode.createDoubleParam("Forward_Opacity_Control", "Forward Opacity")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Mix factor between the original and the transformed image.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Forward_Opacity_Control = param
    del param

    param = lastNode.createSeparatorParam("Devider2", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Devider2 = param
    del param

    param = lastNode.createColorParam("BackwardColorConstantcolor", "Backward Color", True)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.BackwardColorConstantcolor = param
    del param

    param = lastNode.createStringParam("Spacer03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.Spacer03 = param
    del param

    param = lastNode.createDoubleParam("Backward_Opacity_Control", "Backward Opacity")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Mix factor between the original and the transformed image.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Backward_Opacity_Control = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(969, 647)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(1262, 16)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(1014, 72)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(1218, 647)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("color-burn")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "FrameBlend2"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend2")
    lastNode.setLabel("FrameBlend1")
    lastNode.setPosition(1355, 63)
    lastNode.setSize(104, 32)
    lastNode.setColor(0, 0.6667, 0)
    groupFrameBlend2 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(6, 1)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend2"

    # Start of node "Merge4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge4")
    lastNode.setLabel("Merge4")
    lastNode.setPosition(1217, 52)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge4 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge4"

    # Start of node "Merge5"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5")
    lastNode.setLabel("Merge5")
    lastNode.setPosition(1217, 174)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5"

    # Start of node "FrameBlend3"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend3")
    lastNode.setLabel("FrameBlend3")
    lastNode.setPosition(1352, 308)
    lastNode.setSize(104, 32)
    lastNode.setColor(0, 0.6667, 0)
    groupFrameBlend3 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(4, 1)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend3"

    # Start of node "Merge5_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2")
    lastNode.setLabel("Merge5_2")
    lastNode.setPosition(1218, 297)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(1262, 136)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(1262, 258)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "FrameBlend4"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend4")
    lastNode.setLabel("FrameBlend4")
    lastNode.setPosition(1359, 443)
    lastNode.setSize(104, 32)
    lastNode.setColor(0, 0.6667, 0)
    groupFrameBlend4 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(3, 1)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend4"

    # Start of node "Merge5_2_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2_2")
    lastNode.setLabel("Merge5_2_2")
    lastNode.setPosition(1218, 432)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2_2 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2_2"

    # Start of node "Dot4_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2")
    lastNode.setLabel("Dot4_2")
    lastNode.setPosition(1263, 376)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2 = lastNode

    del lastNode
    # End of node "Dot4_2"

    # Start of node "Merge5_2_2_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2_2_2")
    lastNode.setLabel("Merge5_2_2_2")
    lastNode.setPosition(1218, 560)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2_2_2 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2_2_2"

    # Start of node "Dot4_2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2_2")
    lastNode.setLabel("Dot4_2_2")
    lastNode.setPosition(1262, 512)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2_2 = lastNode

    del lastNode
    # End of node "Dot4_2_2"

    # Start of node "FrameBlend7"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend7")
    lastNode.setLabel("FrameBlend7")
    lastNode.setPosition(1739, 188)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6667, 0, 0)
    groupFrameBlend7 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(-4, 0)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend7"

    # Start of node "Merge3_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3_2")
    lastNode.setLabel("Merge3_2")
    lastNode.setPosition(1602, 645)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3_2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("color-burn")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge3_2"

    # Start of node "FrameBlend6"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend6")
    lastNode.setLabel("FrameBlend6")
    lastNode.setPosition(1742, 61)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6667, 0, 0)
    groupFrameBlend6 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(-5, 0)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend6"

    # Start of node "Merge4_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge4_2")
    lastNode.setLabel("Merge4_2")
    lastNode.setPosition(1601, 50)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge4_2 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge4_2"

    # Start of node "Merge5_3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_3")
    lastNode.setLabel("Merge5_3")
    lastNode.setPosition(1601, 177)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_3 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_3"

    # Start of node "FrameBlend8"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend8")
    lastNode.setLabel("FrameBlend8")
    lastNode.setPosition(1736, 310)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6667, 0, 0)
    groupFrameBlend8 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(-3, 0)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend8"

    # Start of node "Merge5_2_3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2_3")
    lastNode.setLabel("Merge5_2_3")
    lastNode.setPosition(1602, 299)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2_3 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2_3"

    # Start of node "Dot3_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3_2")
    lastNode.setLabel("Dot3_2")
    lastNode.setPosition(1646, 137)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3_2 = lastNode

    del lastNode
    # End of node "Dot3_2"

    # Start of node "Dot4_3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_3")
    lastNode.setLabel("Dot4_3")
    lastNode.setPosition(1646, 258)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_3 = lastNode

    del lastNode
    # End of node "Dot4_3"

    # Start of node "Merge5_2_2_3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2_2_3")
    lastNode.setLabel("Merge5_2_2_3")
    lastNode.setPosition(1602, 429)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2_2_3 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2_2_3"

    # Start of node "Dot4_2_3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2_3")
    lastNode.setLabel("Dot4_2_3")
    lastNode.setPosition(1647, 378)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2_3 = lastNode

    del lastNode
    # End of node "Dot4_2_3"

    # Start of node "Merge5_2_2_2_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5_2_2_2_2")
    lastNode.setLabel("Merge5_2_2_2_2")
    lastNode.setPosition(1602, 558)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5_2_2_2_2 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge5_2_2_2_2"

    # Start of node "Dot4_2_2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2_2_2")
    lastNode.setLabel("Dot4_2_2_2")
    lastNode.setPosition(1647, 510)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2_2_2 = lastNode

    del lastNode
    # End of node "Dot4_2_2_2"

    # Start of node "Merge6"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge6")
    lastNode.setLabel("Merge6")
    lastNode.setPosition(1218, 708)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge6 = lastNode

    param = lastNode.getParam("bChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge6"

    # Start of node "Dot7"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot7")
    lastNode.setLabel("Dot7")
    lastNode.setPosition(1647, 728)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot7 = lastNode

    del lastNode
    # End of node "Dot7"

    # Start of node "Dot11"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot11")
    lastNode.setLabel("Dot11")
    lastNode.setPosition(1646, 16)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot11 = lastNode

    del lastNode
    # End of node "Dot11"

    # Start of node "ForwardColorConstant"
    lastNode = app.createNode("net.sf.openfx.ConstantPlugin", 1, group)
    lastNode.setScriptName("ForwardColorConstant")
    lastNode.setLabel("ForwardColorConstant")
    lastNode.setPosition(1366, 647)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupForwardColorConstant = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("color")
    if param is not None:
        param.setValue(1, 1)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "ForwardColorConstant"

    # Start of node "BackwardColorConstant"
    lastNode = app.createNode("net.sf.openfx.ConstantPlugin", 1, group)
    lastNode.setScriptName("BackwardColorConstant")
    lastNode.setLabel("BackwardColorConstant")
    lastNode.setPosition(1740, 645)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupBackwardColorConstant = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("color")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "BackwardColorConstant"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(969, -44)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(1089, 981)
    lastNode.setSize(104, 31)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "FrameBlend2_3"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend2_3")
    lastNode.setLabel("FrameBlend2")
    lastNode.setPosition(1353, 185)
    lastNode.setSize(104, 32)
    lastNode.setColor(0, 0.6667, 0)
    groupFrameBlend2_3 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(5, 1)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend2_3"

    # Start of node "FrameBlend9_2"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend9_2")
    lastNode.setLabel("FrameBlend10")
    lastNode.setPosition(1743, 569)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6667, 0, 0)
    groupFrameBlend9_2 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(-1, 0)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend9_2"

    # Start of node "FrameBlend4_2"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend4_2")
    lastNode.setLabel("FrameBlend4_2")
    lastNode.setPosition(1357, 572)
    lastNode.setSize(104, 32)
    lastNode.setColor(0, 0.6667, 0)
    groupFrameBlend4_2 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(2, 1)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend4_2"

    # Start of node "FrameBlend8_2"
    lastNode = app.createNode("net.sf.openfx.FrameBlend", 2, group)
    lastNode.setScriptName("FrameBlend8_2")
    lastNode.setLabel("FrameBlend9")
    lastNode.setPosition(1743, 440)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6667, 0, 0)
    groupFrameBlend8_2 = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(-2, 0)
        del param

    param = lastNode.getParam("frameInterval")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "FrameBlend8_2"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(1506, 16)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(1506, 580)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "Dot10"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot10")
    lastNode.setLabel("Dot10")
    lastNode.setPosition(1506, 72)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot10 = lastNode

    del lastNode
    # End of node "Dot10"

    # Start of node "Dot12"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot12")
    lastNode.setLabel("Dot12")
    lastNode.setPosition(1506, 194)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot12 = lastNode

    del lastNode
    # End of node "Dot12"

    # Start of node "Dot13"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot13")
    lastNode.setLabel("Dot13")
    lastNode.setPosition(1506, 317)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot13 = lastNode

    del lastNode
    # End of node "Dot13"

    # Start of node "Dot14"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot14")
    lastNode.setLabel("Dot14")
    lastNode.setPosition(1506, 452)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot14 = lastNode

    del lastNode
    # End of node "Dot14"

    # Start of node "Dot15"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot15")
    lastNode.setLabel("Dot15")
    lastNode.setPosition(1888, 16)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot15 = lastNode

    del lastNode
    # End of node "Dot15"

    # Start of node "Dot16"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot16")
    lastNode.setLabel("Dot16")
    lastNode.setPosition(1888, 578)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot16 = lastNode

    del lastNode
    # End of node "Dot16"

    # Start of node "Dot17"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot17")
    lastNode.setLabel("Dot17")
    lastNode.setPosition(1888, 60)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot17 = lastNode

    del lastNode
    # End of node "Dot17"

    # Start of node "Dot18"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot18")
    lastNode.setLabel("Dot18")
    lastNode.setPosition(1888, 190)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot18 = lastNode

    del lastNode
    # End of node "Dot18"

    # Start of node "Dot19"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot19")
    lastNode.setLabel("Dot19")
    lastNode.setPosition(1888, 311)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot19 = lastNode

    del lastNode
    # End of node "Dot19"

    # Start of node "Dot20"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot20")
    lastNode.setLabel("Dot20")
    lastNode.setPosition(1888, 449)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot20 = lastNode

    del lastNode
    # End of node "Dot20"

    # Start of node "Saturation1"
    lastNode = app.createNode("net.sf.openfx.SaturationPlugin", 2, group)
    lastNode.setScriptName("Saturation1")
    lastNode.setLabel("Saturation1")
    lastNode.setPosition(1066, 63)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupSaturation1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("saturation")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("clampWhite")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Saturation1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(1105, 658)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Shuffle1_2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1_2")
    lastNode.setLabel("Shuffle1_2")
    lastNode.setPosition(1503, 719)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1_2 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle1_2"

    # Start of node "Shuffle2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle2")
    lastNode.setLabel("Shuffle2")
    lastNode.setPosition(969, 719)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle2 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("1")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle2"

    # Start of node "Dot23"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot23")
    lastNode.setLabel("Dot23")
    lastNode.setPosition(1548, 578)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot23 = lastNode

    del lastNode
    # End of node "Dot23"

    # Start of node "Merge7"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge7")
    lastNode.setLabel("Merge7")
    lastNode.setPosition(1089, 802)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge7 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge7"

    # Start of node "Shuffle3"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle3")
    lastNode.setLabel("Shuffle3")
    lastNode.setPosition(1283, 813)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle3 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("1")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle3"

    # Start of node "Dot25"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot25")
    lastNode.setLabel("Dot25")
    lastNode.setPosition(831, 72)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot25 = lastNode

    del lastNode
    # End of node "Dot25"

    # Start of node "Dot26"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot26")
    lastNode.setLabel("Dot26")
    lastNode.setPosition(831, 773)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot26 = lastNode

    del lastNode
    # End of node "Dot26"

    # Start of node "Dot27"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot27")
    lastNode.setLabel("Dot27")
    lastNode.setPosition(1150, 580)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot27 = lastNode

    del lastNode
    # End of node "Dot27"

    # Start of node "Equalize1"
    lastNode = app.createNode("net.sf.cimg.CImgEqualize", 2, group)
    lastNode.setScriptName("Equalize1")
    lastNode.setLabel("Equalize1")
    lastNode.setPosition(1066, 7)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupEqualize1 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Equalize1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(786, 813)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    del lastNode
    # End of node "Premult1"

    # Start of node "Dot32"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot32")
    lastNode.setLabel("Dot32")
    lastNode.setPosition(1134, 773)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot32 = lastNode

    del lastNode
    # End of node "Dot32"

    # Now that all nodes are created we can connect them together, restore expressions
    groupMerge2.connectInput(0, groupDot2)
    groupMerge2.connectInput(1, groupShuffle1)
    groupDot1.connectInput(0, groupEqualize1)
    groupDot2.connectInput(0, groupSource)
    groupMerge3.connectInput(0, groupMerge5_2_2_2)
    groupMerge3.connectInput(1, groupForwardColorConstant)
    groupFrameBlend2.connectInput(0, groupDot10)
    groupMerge4.connectInput(1, groupFrameBlend2)
    groupMerge5.connectInput(0, groupDot3)
    groupMerge5.connectInput(1, groupFrameBlend2_3)
    groupFrameBlend3.connectInput(0, groupDot13)
    groupMerge5_2.connectInput(0, groupDot4)
    groupMerge5_2.connectInput(1, groupFrameBlend3)
    groupDot3.connectInput(0, groupMerge4)
    groupDot4.connectInput(0, groupMerge5)
    groupFrameBlend4.connectInput(0, groupDot14)
    groupMerge5_2_2.connectInput(0, groupDot4_2)
    groupMerge5_2_2.connectInput(1, groupFrameBlend4)
    groupDot4_2.connectInput(0, groupMerge5_2)
    groupMerge5_2_2_2.connectInput(0, groupDot4_2_2)
    groupMerge5_2_2_2.connectInput(1, groupFrameBlend4_2)
    groupDot4_2_2.connectInput(0, groupMerge5_2_2)
    groupFrameBlend7.connectInput(0, groupDot18)
    groupMerge3_2.connectInput(0, groupMerge5_2_2_2_2)
    groupMerge3_2.connectInput(1, groupBackwardColorConstant)
    groupFrameBlend6.connectInput(0, groupDot17)
    groupMerge4_2.connectInput(1, groupFrameBlend6)
    groupMerge5_3.connectInput(0, groupDot3_2)
    groupMerge5_3.connectInput(1, groupFrameBlend7)
    groupFrameBlend8.connectInput(0, groupDot19)
    groupMerge5_2_3.connectInput(0, groupDot4_3)
    groupMerge5_2_3.connectInput(1, groupFrameBlend8)
    groupDot3_2.connectInput(0, groupMerge4_2)
    groupDot4_3.connectInput(0, groupMerge5_3)
    groupMerge5_2_2_3.connectInput(0, groupDot4_2_3)
    groupMerge5_2_2_3.connectInput(1, groupFrameBlend8_2)
    groupDot4_2_3.connectInput(0, groupMerge5_2_3)
    groupMerge5_2_2_2_2.connectInput(0, groupDot4_2_2_2)
    groupMerge5_2_2_2_2.connectInput(1, groupFrameBlend9_2)
    groupDot4_2_2_2.connectInput(0, groupMerge5_2_2_3)
    groupMerge6.connectInput(0, groupMerge2)
    groupMerge6.connectInput(1, groupShuffle1_2)
    groupDot7.connectInput(0, groupMerge3_2)
    groupDot11.connectInput(0, groupDot5)
    groupOutput1.connectInput(0, groupMerge7)
    groupFrameBlend2_3.connectInput(0, groupDot12)
    groupFrameBlend9_2.connectInput(0, groupDot16)
    groupFrameBlend4_2.connectInput(0, groupDot6)
    groupFrameBlend8_2.connectInput(0, groupDot20)
    groupDot5.connectInput(0, groupDot1)
    groupDot6.connectInput(0, groupDot14)
    groupDot10.connectInput(0, groupDot5)
    groupDot12.connectInput(0, groupDot10)
    groupDot13.connectInput(0, groupDot12)
    groupDot14.connectInput(0, groupDot13)
    groupDot15.connectInput(0, groupDot11)
    groupDot16.connectInput(0, groupDot20)
    groupDot17.connectInput(0, groupDot15)
    groupDot18.connectInput(0, groupDot17)
    groupDot19.connectInput(0, groupDot18)
    groupDot20.connectInput(0, groupDot19)
    groupSaturation1.connectInput(0, groupDot2)
    groupShuffle1.connectInput(0, groupMerge3)
    groupShuffle1.connectInput(1, groupDot27)
    groupShuffle1_2.connectInput(0, groupDot7)
    groupShuffle1_2.connectInput(1, groupDot23)
    groupShuffle2.connectInput(0, groupMerge2)
    groupDot23.connectInput(0, groupMerge5_2_2_2_2)
    groupMerge7.connectInput(0, groupMerge6)
    groupMerge7.connectInput(1, groupPremult1)
    groupMerge7.connectInput(2, groupDot32)
    groupShuffle3.connectInput(0, groupMerge6)
    groupDot25.connectInput(0, groupDot2)
    groupDot26.connectInput(0, groupDot25)
    groupDot27.connectInput(0, groupMerge5_2_2_2)
    groupEqualize1.connectInput(0, groupSaturation1)
    groupPremult1.connectInput(0, groupDot26)
    groupDot32.connectInput(0, groupDot26)

    param = groupFrameBlend2.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*6", False, 1)
    del param
    param = groupFrameBlend2.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupMerge4.getParam("mix")
    param.setExpression("thisGroup.Forward_Opacity_Control.get()", False, 0)
    del param
    param = groupMerge5.getParam("mix")
    param.setExpression("thisGroup.Forward_Opacity_Control.get()", False, 0)
    del param
    param = groupFrameBlend3.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*4", False, 1)
    del param
    param = groupFrameBlend3.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupMerge5_2.getParam("mix")
    param.setExpression("thisGroup.Forward_Opacity_Control.get()", False, 0)
    del param
    param = groupFrameBlend4.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*3", False, 1)
    del param
    param = groupFrameBlend4.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupMerge5_2_2.getParam("mix")
    param.setExpression("thisGroup.Forward_Opacity_Control.get()", False, 0)
    del param
    param = groupMerge5_2_2_2.getParam("mix")
    param.setExpression("thisGroup.Forward_Opacity_Control.get()", False, 0)
    del param
    param = groupFrameBlend7.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*4*-1", False, 0)
    del param
    param = groupFrameBlend7.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupFrameBlend6.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*5*-1", False, 0)
    del param
    param = groupFrameBlend6.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupMerge4_2.getParam("mix")
    param.setExpression("thisGroup.Backward_Opacity_Control.get()", False, 0)
    del param
    param = groupMerge5_3.getParam("mix")
    param.setExpression("thisGroup.Backward_Opacity_Control.get()", False, 0)
    del param
    param = groupFrameBlend8.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*3*-1", False, 0)
    del param
    param = groupFrameBlend8.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupMerge5_2_3.getParam("mix")
    param.setExpression("thisGroup.Backward_Opacity_Control.get()", False, 0)
    del param
    param = groupMerge5_2_2_3.getParam("mix")
    param.setExpression("thisGroup.Backward_Opacity_Control.get()", False, 0)
    del param
    param = groupMerge5_2_2_2_2.getParam("mix")
    param.setExpression("thisGroup.Backward_Opacity_Control.get()", False, 0)
    del param
    param = groupForwardColorConstant.getParam("color")
    group.getParam("ForwardColorConstantcolor").setAsAlias(param)
    del param
    param = groupBackwardColorConstant.getParam("color")
    group.getParam("BackwardColorConstantcolor").setAsAlias(param)
    del param
    param = groupFrameBlend2_3.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*5", False, 1)
    del param
    param = groupFrameBlend2_3.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupFrameBlend9_2.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*-1", False, 0)
    del param
    param = groupFrameBlend9_2.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupFrameBlend4_2.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*2", False, 1)
    del param
    param = groupFrameBlend4_2.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupFrameBlend8_2.getParam("frameRange")
    param.setExpression("thisGroup.Frame_Interval_Control.get()*2*-1", False, 0)
    del param
    param = groupFrameBlend8_2.getParam("frameInterval")
    param.setExpression("thisGroup.Frame_Interval_Control.get()", False, 0)
    del param
    param = groupShuffle1.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param
    param = groupShuffle1_2.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param
    param = groupShuffle2.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param
    param = groupMerge7.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param
    param = groupShuffle3.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param
    param = groupEqualize1.getParam("disableNode")
    param.setExpression("thisGroup.Skining_Method_Control.get()", False, 0)
    del param

    try:
        extModule = sys.modules["Onion_SExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
