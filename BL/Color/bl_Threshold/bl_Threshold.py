# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named bl_ThresholdExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from bl_ThresholdExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.bl_Threshold"

def getLabel():
    return "bl_Threshold"

def getVersion():
    return 1.0

def getIconPath():
    return "bl_Threshold.png"

def getGrouping():
    return "Community/BL/Color"

def getPluginDescription():
    return "Threshold the image using a color value, a range of thresholding and a replacement color."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.3333, 0.702, 0.4078)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("SETUP", "Setup")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SETUP = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createChoiceParam("mode", "Mode : ")
    entries = [ ("binary", ""),
    ("over", ""),
    ("under", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.mode = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createColorParam("threshold", "Threshold : ", True)
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setDefaultValue(0.5, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setDefaultValue(0.5, 2)
    param.restoreDefaultValue(2)
    param.setMinimum(-2147483648, 3)
    param.setMaximum(2147483647, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(0.5, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.threshold = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "bl_Threshold v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "Version NATRON du Gizmo Nuke développés par Bertrand Lempereur")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("ENG", "NATRON version of Nuke Gizmo developed by Bertrand Lempereur")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ENG = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep111", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep111 = param
    del param

    param = lastNode.createStringParam("sep112", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep112 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output2"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4139, 4399)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput2 = lastNode

    del lastNode
    # End of node "Output2"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4139, 3363)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(4172, 3742)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Expression2"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("Expression2")
    lastNode.setLabel("Expression2")
    lastNode.setPosition(3962, 3850)
    lastNode.setSize(80, 32)
    lastNode.setColor(1, 1, 1)
    groupExpression2 = lastNode

    param = lastNode.getParam("doubleParamsNb")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("x1")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x2")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x3")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x4")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("rExpr")
    if param is not None:
        param.setValue("(r>x1)? 0: 1")
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("(g>x2)? 0: 1")
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("(b>x1)? 0: 1")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("(a>x4)? 0: 1")
        del param

    del lastNode
    # End of node "Expression2"

    # Start of node "Switch1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch1")
    lastNode.setLabel("Switch1")
    lastNode.setPosition(4139, 3989)
    lastNode.setSize(80, 32)
    lastNode.setColor(1, 1, 1)
    groupSwitch1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch1"

    # Start of node "Expression3"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("Expression3")
    lastNode.setLabel("Expression3")
    lastNode.setPosition(4139, 3849)
    lastNode.setSize(80, 32)
    lastNode.setColor(1, 1, 1)
    groupExpression3 = lastNode

    param = lastNode.getParam("doubleParamsNb")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("x1")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x2")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x3")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x4")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("rExpr")
    if param is not None:
        param.setValue("(r>x1)? r: 0")
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("(g>x2)? g: 0")
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("(b>x3)? b: 0")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("(a>x4)? a: 0")
        del param

    del lastNode
    # End of node "Expression3"

    # Start of node "Expression1"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("Expression1")
    lastNode.setLabel("Expression1")
    lastNode.setPosition(4297, 3847)
    lastNode.setSize(80, 32)
    lastNode.setColor(1, 1, 1)
    groupExpression1 = lastNode

    param = lastNode.getParam("doubleParamsNb")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("x1")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x2")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x3")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("x4")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("rExpr")
    if param is not None:
        param.setValue("(r>x1)? 0: r")
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("(g>x2)? 0: g")
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("(b>x3)? 0: b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("(a>x4)? 0: a")
        del param

    del lastNode
    # End of node "Expression1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput2.connectInput(0, groupSwitch1)
    groupDot2.connectInput(0, groupSource)
    groupExpression2.connectInput(0, groupDot2)
    groupSwitch1.connectInput(0, groupExpression2)
    groupSwitch1.connectInput(1, groupExpression3)
    groupSwitch1.connectInput(2, groupExpression1)
    groupExpression3.connectInput(0, groupDot2)
    groupExpression1.connectInput(0, groupDot2)

    param = groupExpression2.getParam("x1")
    param.setExpression("thisGroup.threshold.get()[0]", False, 0)
    del param
    param = groupExpression2.getParam("x2")
    param.setExpression("thisGroup.threshold.get()[1]", False, 0)
    del param
    param = groupExpression2.getParam("x3")
    param.setExpression("thisGroup.threshold.get()[2]", False, 0)
    del param
    param = groupExpression2.getParam("x4")
    param.setExpression("thisGroup.threshold.get()[3]", False, 0)
    del param
    param = groupSwitch1.getParam("which")
    param.setExpression("thisGroup.mode.get()", False, 0)
    del param
    param = groupExpression3.getParam("x1")
    param.setExpression("thisGroup.threshold.get()[0]", False, 0)
    del param
    param = groupExpression3.getParam("x2")
    param.setExpression("thisGroup.threshold.get()[1]", False, 0)
    del param
    param = groupExpression3.getParam("x3")
    param.setExpression("thisGroup.threshold.get()[2]", False, 0)
    del param
    param = groupExpression3.getParam("x4")
    param.setExpression("thisGroup.threshold.get()[3]", False, 0)
    del param
    param = groupExpression1.getParam("x1")
    param.setExpression("thisGroup.threshold.get()[0]", False, 0)
    del param
    param = groupExpression1.getParam("x2")
    param.setExpression("thisGroup.threshold.get()[1]", False, 0)
    del param
    param = groupExpression1.getParam("x3")
    param.setExpression("thisGroup.threshold.get()[2]", False, 0)
    del param
    param = groupExpression1.getParam("x4")
    param.setExpression("thisGroup.threshold.get()[3]", False, 0)
    del param

    try:
        extModule = sys.modules["bl_ThresholdExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
